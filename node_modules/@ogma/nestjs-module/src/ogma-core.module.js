"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OgmaCoreModule = void 0;
const common_1 = require("@nestjs/common");
const core_1 = require("@nestjs/core");
const providers_1 = require("./interceptor/providers");
const ogma_constants_1 = require("./ogma.constants");
const ogma_provider_1 = require("./ogma.provider");
const ogma_service_1 = require("./ogma.service");
const ogma_core_module_definition_1 = require("./ogma-core.module-definition");
const ogma_filter_service_1 = require("./ogma-filter.service");
let OgmaCoreModule = exports.OgmaCoreModule = class OgmaCoreModule extends ogma_core_module_definition_1.ConfigurableModuleClass {
};
exports.OgmaCoreModule = OgmaCoreModule = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        imports: [core_1.DiscoveryModule],
        providers: [
            {
                provide: ogma_constants_1.OGMA_SERVICE_OPTIONS,
                useFactory: ogma_provider_1.createOgmaServiceOptions,
                inject: [ogma_constants_1.OGMA_OPTIONS],
            },
            {
                provide: ogma_constants_1.OGMA_TRACE_METHOD_OPTION,
                useFactory: ogma_provider_1.createOgmaTraceOptions,
                inject: [ogma_constants_1.OGMA_SERVICE_OPTIONS],
            },
            {
                provide: ogma_constants_1.OGMA_INSTANCE,
                useFactory: ogma_provider_1.createOgmaProvider,
                inject: [ogma_constants_1.OGMA_SERVICE_OPTIONS],
            },
            {
                provide: (0, ogma_provider_1.createProviderToken)(providers_1.DelegatorService.name),
                useFactory: (options) => (0, ogma_provider_1.createOgmaProvider)(Object.assign(Object.assign({}, options), { context: providers_1.DelegatorService.name })),
                inject: [ogma_constants_1.OGMA_SERVICE_OPTIONS],
            },
            ogma_service_1.OgmaService,
            providers_1.DelegatorService,
            ogma_filter_service_1.OgmaFilterService,
        ],
        exports: [ogma_constants_1.OGMA_INSTANCE, ogma_service_1.OgmaService, providers_1.DelegatorService, ogma_filter_service_1.OgmaFilterService],
    })
], OgmaCoreModule);
