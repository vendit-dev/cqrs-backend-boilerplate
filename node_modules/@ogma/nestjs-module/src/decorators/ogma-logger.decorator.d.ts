import { ContextType } from '@nestjs/common';
import { AbstractInterceptorService } from '../interceptor/providers';
import { Type } from '../interfaces';
export declare const OgmaLogger: (topic: string | (() => any) | Type<any>) => PropertyDecorator & ParameterDecorator;
export declare const OgmaLoggerRequestScoped: (topic: string | (() => any) | Type<any>) => PropertyDecorator & ParameterDecorator;
export declare const Log: (loggerProperty?: string) => MethodDecorator;
export declare const LogAll: (loggerProperty?: string) => ClassDecorator;
type ParserDecorator = <TFunction extends Type<AbstractInterceptorService>>(target: TFunction) => void | TFunction;
export declare const Parser: (type: ContextType | 'graphql' | string) => ParserDecorator;
export {};
