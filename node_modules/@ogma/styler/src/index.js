"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.style = void 0;
const styler_1 = require("./styler");
/**
 * A class for adding class to your strings. Most of the styles here follow a predictable pattern
 *
 * #### Use
 *
 * start off with `style` and then chain whatever you want to apply to the string. Last foreground and background color will be used. After done with the styles, chain `.apply(valueToApplyTo)` and you'll have your proper SGR string
 *
 * e.g. `style.red.blueBg.underline.apply('Hello World!');`
 *
 * #### Colors
 *
 * if the color is prefixed with a `b` it's the "bright" variant
 * if it is suffixed with a `bg` it applies to the background
 * if the color you want does not exist as a named color you can use `color`. Read more on the method itself
 *
 * #### Styles
 *
 * if it's not a color, it's a style or effect. All of the information about these styles and effects ca be found in the related link
 *
 * @link https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_(Select_Graphic_Rendition)_parameters
 */
exports.style = new styler_1.Styler();
__exportStar(require("./styler"), exports);
