"use strict";
/*
 * Copyright 2023 The NATS Authors
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsumersImpl = void 0;
const consumer_1 = require("./consumer");
const jsmstream_api_1 = require("./jsmstream_api");
const semver_1 = require("./semver");
class ConsumersImpl {
    constructor(api) {
        this.api = api;
        this.notified = false;
    }
    checkVersion(ordered = false) {
        if (!this.notified) {
            this.notified = true;
            console.log(`\u001B[33m >> consumers framework is beta functionality \u001B[0m`);
        }
        const fv = this.api.nc.features.get(semver_1.Feature.JS_SIMPLIFICATION);
        if (!fv.ok) {
            return Promise.reject(new Error(`consumers framework is only supported on servers ${fv.min} or better`));
        }
        return Promise.resolve();
    }
    get(stream, name = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            if (typeof name === "object") {
                return this.ordered(stream, name);
            }
            // check we have support for pending msgs and header notifications
            yield this.checkVersion();
            return this.api.info(stream, name)
                .then((ci) => {
                if (ci.config.deliver_subject !== undefined) {
                    return Promise.reject(new Error("push consumer not supported"));
                }
                return new consumer_1.PullConsumerImpl(this.api, ci);
            })
                .catch((err) => {
                return Promise.reject(err);
            });
        });
    }
    ordered(stream, opts) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.checkVersion(true);
            const impl = this.api;
            const sapi = new jsmstream_api_1.StreamAPIImpl(impl.nc, impl.opts);
            return sapi.info(stream)
                .then((_si) => {
                return Promise.resolve(new consumer_1.OrderedPullConsumerImpl(this.api, stream, opts));
            })
                .catch((err) => {
                return Promise.reject(err);
            });
        });
    }
}
exports.ConsumersImpl = ConsumersImpl;
//# sourceMappingURL=consumers.js.map