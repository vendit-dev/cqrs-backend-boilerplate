import { Consumer, MsgRequest, StoredMsg, Stream, StreamAlternate, StreamAPI, StreamInfo, Streams } from "./types";
import { StreamAPIImpl } from "./jsmstream_api";
import { OrderedConsumerOptions } from "./consumer";
export declare class StreamsImpl implements Streams {
    api: StreamAPIImpl;
    constructor(api: StreamAPI);
    get(stream: string): Promise<Stream>;
}
export declare class StreamImpl implements Stream {
    api: StreamAPIImpl;
    _info: StreamInfo;
    constructor(api: StreamAPI, info: StreamInfo);
    get name(): string;
    alternates(): Promise<StreamAlternate[]>;
    best(): Promise<Stream>;
    info(cached?: boolean): Promise<StreamInfo>;
    getConsumer(name?: string | Partial<OrderedConsumerOptions>): Promise<Consumer>;
    getMessage(query: MsgRequest): Promise<StoredMsg>;
}
